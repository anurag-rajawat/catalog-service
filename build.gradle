plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.eclipse.jkube.kubernetes' version '1.13.1'
}

group = 'com.asr'
version = '0.0.1-SNAPSHOT'
description = 'Provide functionality for managing the products in the catalog.'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
//    TODO: Enable actuator health endpoints
//    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:mongodb'
}

tasks.named('test') {
    useJUnitPlatform()
}

kubernetes {
    image {
        name = "anuragrajawat/${project.name}:${project.version}"
    }

    resources {
        controller {
            env {
                SPRING_DATA_MONGODB_URI = 'mongodb://store-mongo:27017/product_catalog'
            }
        }

        services = [{
                        name = "${project.name}"
                        headless = "false"
                        type = "ClusterIP"
                        ports = [{
                                     protocol = "tcp"
                                     port = "80"
                                     targetPort = "9001"
                                 }]
                    }]
    }
}
